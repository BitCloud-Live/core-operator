
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: mesons.network.meson
spec:
  group: network.meson
  names:
    kind: Meson
    listKind: MesonList
    plural: mesons
    singular: meson
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Meson is the Schema for the mesons API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MesonSpec defines the desired state of Meson
            properties:
              appId:
                default: meson/meson
                description: Docker image name.
                type: string
              replicas:
                default: 1
                description: Replicas indicate the replicas to mantain
                format: int32
                type: integer
            type: object
          status:
            description: MesonStatus defines the observed state of Meson
            properties:
              pods:
                description: Pods are the name of the Pods hosting the App
                items:
                  type: string
                type: array
            required:
            - pods
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
